{"version":3,"sources":["utils/ConfirmatonDialog.js","containers/Member/FormHelper.js","apis/api.js","actions/index.js","actions/types.js","utils/Notification.js","containers/Member/Member.js","containers/Member/validate.js","components/Header/Header.js","utils/FamilyTreeHelper.js","containers/Relationship/Relationship.js","containers/FamilyTree/FamilyTree.js","utils/ErrorBoundary.js","App.js","serviceWorker.js","reducers/MemberReducer.js","reducers/index.js","reducers/FamilyTreeReducer.js","reducers/ParentReducer.js","reducers/UserContextReducer.js","index.js"],"names":["ConfirmatonDialog","react_default","a","createElement","Dialog_default","open","this","props","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","onClick","color","delete","autoFocus","Component","renderTextField","_ref","input","label","meta","TextField_default","Object","assign","fullWidth","error","touched","autoComplete","Typography_default","variant","gutterBottom","style","renderRadioGroup","_ref2","rest","objectWithoutProperties","RadioGroup_default","value","onChange","event","axios","create","withCredentials","getMembers","_ref4","asyncToGenerator","regenerator_default","mark","_callee4","dispatch","response","wrap","_context4","prev","next","api","get","sent","type","payload","stop","_x4","apply","arguments","getFamilyTree","memberId","_ref8","_callee8","_context8","_x8","Notification","Snackbar_default","anchorOrigin","vertical","horizontal","message","autoHideDuration","closeNotification","ContentProps","Member","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","reloadMembers","then","setState","members","onSubmit","formValues","member","state","name","birthYear","deathYear","birthPlace","sex","_","isEqual","createOrUpdateMember","edit","selectedMember","reset","deleteMember","catch","handleDelete","handleClick","getMember","keys","forEach","key","change","cancel","_this2","options","map","handleSubmit","Grid_default","container","direction","item","xs","padding","react_select_esm","isClearable","isSearchable","placeholder","marginBottom","display","Field","component","FormControlLabel_default","control","Radio_default","disabled","pristine","margin","utils_ConfirmatonDialog","utils_Notification","wrappedForm","reduxForm","form","validate","values","errors","field","$","isNumeric","connect","_callee","_context","_x","_ref3","_callee3","_context3","_x3","_callee2","_context2","post","_x2","styles","root","flexGrow","grow","width","menuButton","marginLeft","marginRight","Header","handleChange","logout","window","location","href","generateTabs","userContext","Tabs_default","Tab_default","Link","to","Button","className","AppBar_default","position","Toolbar_default","IconButton_default","aria-label","index_es","icon","faUsers","getObjects","obj","val","objects","i","hasOwnProperty","concat","push","lastIndexOf","getObject","Relationship","loadMembers","selectedOptions","length","list","FamilyTreeHelper","familyTree","filter","includes","handleMemberClick","getParents","parent","parentId","parentIds","parents","handleParentClick","selectedParent","addParent","_this$state","that","assertThisInitialized","addCouple","option","relationship","_this$state2","parentOptions","labelArray","join","isEmpty","isMulti","components","makeAnimated","closeMenuOnSelect","_ref5","_callee5","_context5","_x5","_ref7","_callee7","_context7","_x7","couple","_ref6","_callee6","_context6","_x6","FamilyTree","html","generateNodes","spouses","spouse","parentObject","children","class","marriages","relation","extra","pick","child","config","target","debug","height","callbacks","nodeClick","textRenderer","year","top","right","bottom","left","nodeWidth","node","linage","marriage","text","ancestorConfig","extend","generateFamilyTree","displayedNodes","ancestors","toConsumableArray","Set","dTree","init","ErrorBoundary","errorInfo","whiteSpace","toString","componentStack","App","getUserContext","react_router","path","exact","utils_ErrorBoundary","react_router_dom","components_Header_Header","generateSwitch","_ref9","_callee9","_context9","_x9","Boolean","hostname","match","MemberReducer","undefined","action","data","rootReducer","combineReducers","formReducer","store","applyMiddleware","reduxThunk","createStore","createStoreWithMiddleware","reducers","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2eAoCeA,mLA1BP,OACIC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACIG,KAAMC,KAAKC,MAAMF,KACjBG,QAASF,KAAKC,MAAME,YACpBC,kBAAgB,qBAChBC,mBAAiB,4BAEjBV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAaW,GAAG,sBAAsB,iBACtCZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,KACID,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAmBW,GAAG,4BAAtB,8DAIJZ,EAAAC,EAAAC,cAACa,EAAAd,EAAD,KACID,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAAQgB,QAASZ,KAAKC,MAAME,YAAaU,MAAM,WAA/C,UAGAlB,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAAQgB,QAASZ,KAAKC,MAAMa,OAAQD,MAAM,UAAUE,WAAS,GAA7D,eAnBYC,2ECHnBC,EAAkB,SAAAC,GAA0B,IAAxBC,EAAwBD,EAAxBC,MAAOC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,KAC3C,OAAU1B,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD2B,OAAAC,OAAA,CAAWC,WAAW,EAC7BL,MAAOA,GACHD,EAFG,CAGPO,SAAOL,EAAKM,UAAWN,EAAKK,OAC5BE,aAAa,SAGbjC,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,CAAYkC,QAAQ,UAAUC,cAAY,GACtCpC,EAAAC,EAAAC,cAAA,QAAMmC,MAAO,CAACnB,MAAO,QAArB,IAA+BQ,EAAKM,SAAWN,EAAKK,UAOvDO,EAAmB,SAAAC,GAA4B,IAA1Bf,EAA0Be,EAA1Bf,MAAOE,EAAmBa,EAAnBb,KAASc,EAAUZ,OAAAa,EAAA,EAAAb,CAAAW,EAAA,kBACxD,OAAQvC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD2B,OAAAC,OAAA,GACLL,EACAgB,EAFK,CAGTG,MAAOnB,EAAMmB,MACbC,SAAU,SAACC,EAAOF,GAAR,OAAkBnB,EAAMoB,SAASD,OAG3C3C,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,CAAYkC,QAAQ,UAAUC,cAAY,GACtCpC,EAAAC,EAAAC,cAAA,QAAMmC,MAAO,CAACnB,MAAO,QAArB,IAA+BQ,EAAKM,SAAWN,EAAKK,oDC5BjDe,WAAMC,OAAO,CAExBC,iBAAiB,ICiCRC,EAAa,iCAAAC,EAAAtB,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAnD,EAAAoD,KAAM,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAJ,EAAAnD,EAAAwD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACLC,EAAIC,IAAI,YADH,OACtBN,EADsBE,EAAAK,KAE5BR,EAAS,CACLS,KCrCmB,cDsCnBC,QAAST,IAJe,wBAAAE,EAAAQ,SAAAZ,EAAAjD,SAAN,gBAAA8D,GAAA,OAAAjB,EAAAkB,MAAA/D,KAAAgE,YAAA,IAgCbC,EAAgB,SAACC,GAAD,sBAAAC,EAAA5C,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAnD,EAAAoD,KAAc,SAAAoB,EAAMlB,GAAN,IAAAC,EAAA,OAAAJ,EAAAnD,EAAAwD,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAd,KAAA,EAChBC,EAAIC,IAAI,eAAiBS,GADT,OACjCf,EADiCkB,EAAAX,KAEvCR,EAAS,CACLS,KClEsB,kBDmEtBC,QAAST,IAJ0B,wBAAAkB,EAAAR,SAAAO,EAAApE,SAAd,gBAAAsE,GAAA,OAAAH,EAAAJ,MAAA/D,KAAAgE,YAAA,+BE7CdO,oLAlBP,OACI5E,EAAAC,EAAAC,cAAC2E,GAAA5E,EAAD,CACI6E,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhB5E,OAAQC,KAAKC,MAAM2E,QACnBC,iBAAkB,IAClB3E,QAASF,KAAKC,MAAM6E,kBACpBC,aAAc,CACV1E,mBAAoB,cAExBuE,QAASjF,EAAAC,EAAAC,cAAA,QAAMU,GAAG,cAAcP,KAAKC,MAAM2E,kBAfhC5D,iCCYrBgE,eACF,SAAAA,EAAY/E,GAAO,IAAAgF,EAAA,OAAA1D,OAAA2D,EAAA,EAAA3D,CAAAvB,KAAAgF,IACfC,EAAA1D,OAAA4D,EAAA,EAAA5D,CAAAvB,KAAAuB,OAAA6D,EAAA,EAAA7D,CAAAyD,GAAAK,KAAArF,KAAMC,KAUVqF,cAAgB,WACZL,EAAKhF,MAAM2C,aAAa2C,KAAK,WACzBN,EAAKO,SAAS,CACVC,QAASR,EAAKhF,MAAMwF,aAdbR,EAwBnB9E,YAAc,WACV8E,EAAKO,SAAS,CAACzF,MAAM,KAzBNkF,EA4BnBS,SAAW,SAACC,GACR,IAAMC,EAAS,CACX1B,SAAUe,EAAKY,MAAM3B,SACrB4B,KAAMH,EAAWG,KACjBC,UAAWJ,EAAWI,UACtBC,UAAWL,EAAWK,UACtBC,WAAYN,EAAWM,WACvBC,IAAKP,EAAWO,KAEhBC,KAAEC,QAAQnB,EAAKhF,MAAM2F,OAAQD,GAC7BV,EAAKO,SAAS,CACVZ,QAAS,sBAIjBK,EAAKhF,MAAMoG,qBAAqBT,GAAQL,KAAK,WACzCN,EAAKO,SAAS,CACVtB,SAAU,KACVoC,MAAM,EACNC,eAAgB,KAChB3B,QAASK,EAAKY,MAAMS,KAAO,+BAAiC,iCAEhErB,EAAKhF,MAAMuG,QACXvB,EAAKK,mBAnDML,EAuDnBnE,OAAS,WACLmE,EAAKhF,MAAMwG,aAAaxB,EAAKY,MAAM3B,UAAUqB,KAAK,WAC9CN,EAAKO,SAAS,CACVtB,SAAU,KACVnE,MAAM,EACNuG,MAAM,EACNC,eAAgB,KAChB3B,QAAS,gCAEbK,EAAKhF,MAAMuG,QACXvB,EAAKK,kBACNoB,MAAM,SAAChF,GACNuD,EAAKO,SAAS,CACVZ,QAAS,mEACT2B,eAAgB,KAChBxG,MAAM,OAtECkF,EA4EnB0B,aAAe,SAACzC,GACZe,EAAKO,SAAS,CACVzF,MAAM,EACNmE,SAAUA,KA/ECe,EAmFnB2B,YAAc,SAACL,GASX,GAPAtB,EAAKO,SAAS,CAACe,mBACftB,EAAKhF,MAAMuG,QACXvB,EAAKO,SAAS,CACVc,MAAM,EACNpC,SAAU,OAGVqC,EAAgB,CAChB,IAAMrC,EAAWqC,EAAejE,MAChC2C,EAAKhF,MAAM4G,UAAU3C,GAAUqB,KAAK,WAAM,IAC/BK,EAAUX,EAAKhF,MAAf2F,OACPrE,OAAOuF,KAAKlB,GAAQmB,QAAQ,SAAAC,GACxB/B,EAAKhF,MAAMgH,OAAOD,EAAKpB,EAAOoB,MAElC/B,EAAKO,SAAS,CACVc,MAAM,EACNpC,SAAUA,EACV0B,OAAQA,MAEbc,MAAM,SAAChF,GACNuD,EAAKO,SAAS,CACVZ,QAAS,yBACT2B,eAAgB,WA3GbtB,EAiHnBiC,OAAS,WACLjC,EAAKO,SAAS,CACVc,MAAM,EACNC,eAAgB,KAChBrC,SAAU,OAEde,EAAKhF,MAAMuG,SAvHIvB,EA0HnBuB,MAAQ,WACJvB,EAAKhF,MAAMuG,SA3HIvB,EA8HnBH,kBAAoB,WAChBG,EAAKO,SAAS,CACVZ,QAAS,QA9HbK,EAAKY,MAAQ,CACT9F,MAAM,EACNuG,MAAM,EACNb,QAAS,GACTvB,SAAU,KACVqC,eAAgB,MAPLtB,mFAqBfjF,KAAKsF,iDA+GA,IAAA6B,EAAAnH,KACDoH,EAAUpH,KAAK6F,MAAMJ,QAAQ4B,IAAI,SAAAzB,GAAM,MAAK,CAC5CtD,MAAOsD,EAAO1B,SACd9C,MAAOwE,EAAOE,QAIlB,OACInG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QACI+B,aAAa,MACb8D,SAAU1F,KAAKC,MAAMqH,aAAatH,KAAK0F,WAEvC/F,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CAAM4H,WAAS,EAACC,UAAU,OACtB9H,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CAAM8H,MAAI,EAACC,GAAI,GACXhI,EAAAC,EAAAC,cAAA,OAAKmC,MAAO,CAAC4F,QAAS,KAClBjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CACIC,aAAa,EACbC,cAAc,EACdzF,MAAOtC,KAAK6F,MAAMU,eAClBhE,SAAUvC,KAAK4G,YACfQ,QAASA,EACTY,YAAY,mCAIxBrI,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CAAM8H,MAAI,EAACC,GAAI,EAAG3F,MAAO,CAAC4F,QAAS,KAC/BjI,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CACIkC,QAAQ,YACRjB,MAAM,YACNmB,MAAO,CAACiG,aAAc,GAAIC,QAASlI,KAAK6F,MAAMS,KAAO,QAAU,QAC/D1F,QAAS,WACLuG,EAAKR,aAAaQ,EAAKtB,MAAM3B,YALrC,UAUAvE,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CAAM8H,MAAI,EAACC,GAAI,IACXhI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CACIrC,KAAK,OACLsC,UAAWnH,EACXG,MAAM,YAIdzB,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CAAM8H,MAAI,EAACC,GAAI,IACXhI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CACIrC,KAAK,aACLsC,UAAWnH,EACXG,MAAM,sBAGdzB,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CAAM8H,MAAI,EAACC,GAAI,IACXhI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CACIrC,KAAK,YACLsC,UAAWnH,EACXG,MAAM,kBACNuC,KAAK,YAGbhE,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CAAM8H,MAAI,EAACC,GAAI,IACXhI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CACIrC,KAAK,YACLsC,UAAWnH,EACXG,MAAM,gBACNuC,KAAK,YAGbhE,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CAAM8H,MAAI,EAACC,GAAI,IACXhI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOrC,KAAK,MAAMsC,UAAWnG,GACzBtC,EAAAC,EAAAC,cAACwI,EAAAzI,EAAD,CACI0C,MAAM,IACNgG,QAAS3I,EAAAC,EAAAC,cAAC0I,EAAA3I,EAAD,MACTwB,MAAM,WAEVzB,EAAAC,EAAAC,cAACwI,EAAAzI,EAAD,CACI0C,MAAM,IACNgG,QAAS3I,EAAAC,EAAAC,cAAC0I,EAAA3I,EAAD,MACTwB,MAAM,WAIlBzB,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,KACID,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CACIkC,QAAQ,YACRjB,MAAM,UACN2H,SAAUxI,KAAKC,MAAMwI,SACrB9E,KAAM,UAEL3D,KAAK6F,MAAMS,KAAO,SAAW,UAElC3G,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CACIkC,QAAQ,YACRjB,MAAM,YACNmB,MAAO,CAAC0G,OAAQ,QAChB9H,QAASZ,KAAK6F,MAAMS,KAAOtG,KAAKkH,OAASlH,KAAKwG,OAE7CxG,KAAK6F,MAAMS,KAAO,SAAW,YAM9C3G,EAAAC,EAAAC,cAAC8I,EAAD,CACI5I,KAAMC,KAAK6F,MAAM9F,KACjBI,YAAaH,KAAKG,YAClBW,OAAQd,KAAKc,SAEjBnB,EAAAC,EAAAC,cAAC+I,GAAD,CAAchE,QAAS5E,KAAK6F,MAAMjB,QAASE,kBAAmB9E,KAAK8E,6BAjPlE9D,aAuPf6H,GAAcC,YAAU,CAC1BC,KAAM,aACNC,SCtQW,SAAUC,GACrB,IAAMC,EAAS,GACQ,CACnB,OACA,aACA,aAEWnC,QAAQ,SAAAoC,GACdF,EAAOE,KACRD,EAAOC,GAAS,4BAcxB,MAVsB,CAAC,YAAa,aACtBpC,QAAQ,SAAAoC,GACdF,EAAOE,KAAWC,IAAEC,UAAUJ,EAAOE,MACrCD,EAAOC,GAASD,EAAOC,IAAU,kCAIrCF,EAAM,WAAiBA,EAAM,YAC7BC,EAAM,UAAgBA,EAAM,WAAiB,iDAE1CA,ID6OSJ,CAGjB9D,IAMYsE,eAJS,SAAApI,GACpB,MAAO,CAACuE,QADmCvE,EAArBuE,QACLG,OAD0B1E,EAAZ0E,SAM/B,CAAChD,aAAYiE,UHpQQ,SAAC3C,GAAD,sBAAAhD,EAAAK,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAnD,EAAAoD,KAAc,SAAAuG,EAAMrG,GAAN,IAAAC,EAAA,OAAAJ,EAAAnD,EAAAwD,KAAA,SAAAoG,GAAA,cAAAA,EAAAlG,KAAAkG,EAAAjG,MAAA,cAAAiG,EAAAjG,KAAA,EACZC,EAAIC,IAAI,YAAcS,GADV,OAC7Bf,EAD6BqG,EAAA9F,KAEnCR,EAAS,CACLS,KCfkB,aDgBlBC,QAAST,IAJsB,wBAAAqG,EAAA3F,SAAA0F,EAAAvJ,SAAd,gBAAAyJ,GAAA,OAAAvI,EAAA6C,MAAA/D,KAAAgE,YAAA,IGoQGyC,aHpPA,SAACvC,GAAD,sBAAAwF,EAAAnI,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAnD,EAAAoD,KAAc,SAAA2G,EAAMzG,GAAN,IAAAC,EAAA,OAAAJ,EAAAnD,EAAAwD,KAAA,SAAAwG,GAAA,cAAAA,EAAAtG,KAAAsG,EAAArG,MAAA,cAAAqG,EAAArG,KAAA,EACfC,EAAI1C,OAAO,YAAcoD,GADV,OAChCf,EADgCyG,EAAAlG,KAEtCR,EAAS,CACLS,KC9BqB,gBD+BrBC,QAAST,IAJyB,wBAAAyG,EAAA/F,SAAA8F,EAAA3J,SAAd,gBAAA6J,GAAA,OAAAH,EAAA3F,MAAA/D,KAAAgE,YAAA,IGoPcqC,qBH5PN,SAACT,GAAD,sBAAA1D,EAAAX,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAnD,EAAAoD,KAAY,SAAA8G,EAAM5G,GAAN,IAAAC,EAAA,OAAAJ,EAAAnD,EAAAwD,KAAA,SAAA2G,GAAA,cAAAA,EAAAzG,KAAAyG,EAAAxG,MAAA,cAAAwG,EAAAxG,KAAA,EACrBC,EAAIwG,KAAK,WAAYpE,GADA,OACtCzC,EADsC4G,EAAArG,KAE5CR,EAAS,CACLS,KCxB+B,0BDyB/BC,QAAST,IAJ+B,wBAAA4G,EAAAlG,SAAAiG,EAAA9J,SAAZ,gBAAAiK,GAAA,OAAA/H,EAAA6B,MAAA/D,KAAAgE,YAAA,KG0PrBsF,CAGbT,yIEtQIqB,GAAS,CACXC,KAAM,CACFC,SAAU,GAEdC,KAAM,CACFC,MAAO,KAEXC,WAAY,CACRC,YAAa,GACbC,YAAa,KA8DNC,eAxDX,SAAAA,EAAYzK,GAAO,IAAAgF,EAAA,OAAA1D,OAAA2D,EAAA,EAAA3D,CAAAvB,KAAA0K,IACfzF,EAAA1D,OAAA4D,EAAA,EAAA5D,CAAAvB,KAAAuB,OAAA6D,EAAA,EAAA7D,CAAAmJ,GAAArF,KAAArF,KAAMC,KAMV0K,aAAe,SAACnI,EAAOF,GACnB2C,EAAKO,SAAS,CAAClD,WARA2C,EAWnB2F,OAAS,WACLC,OAAOC,SAASC,KAAO,SAZR9F,EAenB+F,aAAe,WACL,IAACC,EAAehG,EAAKhF,MAApBgL,YACF3I,EAAS2C,EAAKY,MAAdvD,MACL,MAAoB,UAAhB2I,EAEItL,EAAAC,EAAAC,cAACqL,GAAAtL,EAAD,CAAM0C,MAAOA,EAAOC,SAAU0C,EAAK0F,cAC/BhL,EAAAC,EAAAC,cAACsL,GAAAvL,EAAD,CAAKwB,MAAM,mBAAmBgH,UAAWgD,KAAMC,GAAG,gBAClD1L,EAAAC,EAAAC,cAACsL,GAAAvL,EAAD,CAAKwB,MAAM,iBAAiBgH,UAAWgD,KAAMC,GAAG,YAChD1L,EAAAC,EAAAC,cAACsL,GAAAvL,EAAD,CAAKwB,MAAM,uBAAuBgH,UAAWgD,KAAMC,GAAG,kBACtD1L,EAAAC,EAAAC,cAACsL,GAAAvL,EAAD,CAAKwB,MAAM,SAASgH,UAAWkD,IAAQ1K,QAASqE,EAAK2F,UAKzDjL,EAAAC,EAAAC,cAACqL,GAAAtL,EAAD,CAAM0C,MAAOA,EAAOC,SAAU0C,EAAK0F,cAC/BhL,EAAAC,EAAAC,cAACsL,GAAAvL,EAAD,CAAKwB,MAAM,mBAAmBgH,UAAWgD,KAAMC,GAAG,gBAClD1L,EAAAC,EAAAC,cAACsL,GAAAvL,EAAD,CAAKwB,MAAM,SAASgH,UAAWkD,IAAQ1K,QAASqE,EAAK2F,WA7BjE3F,EAAKY,MAAQ,CACTvD,MAAO,GAHI2C,wEAsCf,OACItF,EAAAC,EAAAC,cAAA,OAAK0L,UAAWrB,GAAOC,MACnBxK,EAAAC,EAAAC,cAAC2L,GAAA5L,EAAD,CAAQ6L,SAAS,UACb9L,EAAAC,EAAAC,cAAC6L,GAAA9L,EAAD,KACID,EAAAC,EAAAC,cAAC8L,GAAA/L,EAAD,CAAYsK,OAAQA,GAAOK,WAAY1J,MAAM,UAAU+K,aAAW,QAC9DjM,EAAAC,EAAAC,cAACgM,GAAA,EAAD,CAAiBC,KAAMC,QAE3BpM,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,CAAYkC,QAAQ,KAAKjB,MAAM,UAAUmB,MAAOkI,GAAOG,MAAvD,eAGCrK,KAAKgL,yBAlDThK,2CCxBd,SAASgL,GAAWC,EAAKjF,EAAKkF,GACjC,IAAIC,EAAU,GACd,IAAK,IAAIC,KAAKH,EACLA,EAAII,eAAeD,KACH,iBAAVH,EAAIG,GACXD,EAAUA,EAAQG,OAAON,GAAWC,EAAIG,GAAIpF,EAAKkF,IAGjDE,GAAKpF,GAAOiF,EAAIG,IAAMF,GAAOE,GAAKpF,GAAc,IAAPkF,EACzCC,EAAQI,KAAKN,GACNA,EAAIG,IAAMF,GAAc,IAAPlF,IAES,GAA7BmF,EAAQK,YAAYP,IACpBE,EAAQI,KAAKN,IAIzB,OAAOE,EAGJ,SAASM,GAAUR,EAAKjF,EAAKkF,GAChC,OAAOF,GAAWC,EAAKjF,EAAKkF,GAAK,IAAM,OCXrCQ,eACF,SAAAA,EAAYzM,GAAO,IAAAgF,EAAA,OAAA1D,OAAA2D,EAAA,EAAA3D,CAAAvB,KAAA0M,IACfzH,EAAA1D,OAAA4D,EAAA,EAAA5D,CAAAvB,KAAAuB,OAAA6D,EAAA,EAAA7D,CAAAmL,GAAArH,KAAArF,KAAMC,KAWV0M,YAAc,WACV1H,EAAKhF,MAAM2C,aAAa2C,KAAK,WACzBN,EAAKO,SAAS,CACVC,QAASR,EAAKhF,MAAMwF,aAfbR,EAyBnB2B,YAAc,SAACgG,GACoB,IAA3BA,EAAgBC,QAChB5H,EAAK0H,cAGsB,IAA3BC,EAAgBC,QAChB5H,EAAKhF,MAAMgE,cAAc2I,EAAgB,GAAG1I,UAAUqB,KAAK,WACvD,IAAIuH,EAAOC,GAA4B9H,EAAKhF,MAAM+M,WAAY,WAAY,IACrE3F,IAAI,SAAAzB,GAAM,OAAIA,EAAO1B,WAC1Be,EAAKO,SAAS,CACVC,QAASR,EAAKY,MAAMJ,QAAQwH,OAAO,SAAArH,GAAM,OAAKO,KAAE+G,SAASJ,EAAMlH,EAAO1B,gBAK9E0I,EAAgBC,QAAU,GAC1B5H,EAAKO,SAAS,CAACoH,qBAzCJ3H,EA6CnBkI,kBAAoB,SAAC5G,GAEjB,GADAtB,EAAKO,SAAS,CAACe,mBACXJ,KAAE1C,IAAI8C,EAAgB,YAAa,KAC9BrC,EAAYqC,EAAZrC,SACLe,EAAKhF,MAAMmN,aAAa7H,KAAK,WACzBN,EAAKhF,MAAMgE,cAAcC,GAAUqB,KAAK,WACpC,IAAIuH,EAAOC,GAA4B9H,EAAKhF,MAAM+M,WAAY,WAAY,IACrE3F,IAAI,SAAAgG,GAAM,OAAIA,EAAOC,WACrBL,OAAO,SAAAM,GAAS,OAAIA,IACzBtI,EAAKO,SAAS,CACVgI,QAASvI,EAAKhF,MAAMuN,QAAQP,OAAO,SAAAI,GAAM,OAAKlH,KAAE+G,SAASJ,EAAMO,EAAOC,uBAMlFrI,EAAK0H,eA7DM1H,EAiEnBwI,kBAAoB,SAACC,GACjBzI,EAAKO,SAAS,CAACkI,oBAlEAzI,EAqEnBH,kBAAoB,WAChBG,EAAKO,SAAS,CACVZ,QAAS,QAvEEK,EA2EnB0I,UAAY,WAAM,IAAAC,EAC2B3I,EAAKY,MAAvCU,EADOqH,EACPrH,eAAgBmH,EADTE,EACSF,eACnB9H,EAAS,CACX1B,SAAUqC,EAAerC,SACvBmJ,OAAQ,CACNC,SAAUI,EAAeJ,WAG3BO,EAAItM,OAAAuM,GAAA,EAAAvM,CAAA0D,GACRA,EAAKhF,MAAM0N,UAAU/H,GAAQL,KAAK,WAC9BsI,EAAKrI,SAAS,CACVZ,QAAS,4CACT2B,eAAgB,KAChBmH,eAAe,QAxFRzI,EA8FnB8I,UAAY,WACR,IAAIV,EAAS,CACT5H,QAAS,IAEaR,EAAKY,MAAxB+G,gBACS7F,QAAQ,SAACiH,GACrBX,EAAO5H,QAAQ8G,KAAKyB,KAGxB,IAAIH,EAAItM,OAAAuM,GAAA,EAAAvM,CAAA0D,GACRA,EAAKhF,MAAM8N,UAAUV,GAChB9H,KAAK,SAACpC,GACH0K,EAAKrI,SAAS,CACVZ,QAAS,+CAGrBK,EAAKO,SAAS,CACVoH,gBAAiB,QA7GrB3H,EAAKY,MAAQ,CACTJ,QAAS,GACT+H,QAAS,GACTS,aAAc,GACdrI,OAAQ,GACRgH,gBAAiB,KACjBrG,eAAgB,MARLtB,mFAsBfjF,KAAK2M,+CA6FA,IAAAuB,EACuElO,KAAK6F,MAA1EJ,EADFyI,EACEzI,QAAS+H,EADXU,EACWV,QAASjH,EADpB2H,EACoB3H,eAAgBqG,EADpCsB,EACoCtB,gBAAiBc,EADrDQ,EACqDR,eAEtDtG,EAAU,GACd3B,EAAQ4B,IAAI,SAAAzB,GACRwB,EAAQmF,KACJ,CACIrI,SAAU0B,EAAO1B,SACjB5B,MAAOsD,EAAO1B,SACd9C,MAAOwE,EAAOE,SAK1B,IAAIqI,EAAgB,GAgBpB,OAfAX,EAAQnG,IAAI,SAAAgG,GACR,IAAIe,EAAa,GACjBf,EAAO5H,QAAQsB,QAAQ,SAACnB,GACpBwI,EAAW7B,KAAK3G,EAAOE,QAE3B,IAAI1E,EAAQgN,EAAWC,KAAK,OAC5BF,EAAc5B,KACV,CACIe,SAAUD,EAAOC,SACjBhL,MAAO+K,EAAOC,SACdlM,MAAOA,MAMfzB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CAAM4H,WAAS,EAACC,UAAU,OACtB9H,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CAAM8H,MAAI,EAACC,GAAI,GACXhI,EAAAC,EAAAC,cAAA,OAAKmC,MAAO,CAAC4F,QAAS,KAClBjI,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAAQoC,MAAO,CAAC0G,OAAQ,IAChB5G,QAAQ,YACRjB,MAAM,UACN2H,SAAUrC,KAAEmI,QAAQ1B,IAAyD,IAArCzG,KAAE1C,IAAImJ,EAAiB,UAC/DhM,QAASZ,KAAK+N,WAJtB,+BAOApO,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CACIC,aAAa,EACbC,cAAc,EACdzF,MAAOtC,KAAK6F,MAAM+G,gBAClBrK,SAAUvC,KAAK4G,YACfQ,QAASA,EACTmH,SAAO,EACPC,WAAYC,OACZC,mBAAmB,EACnB1G,YAAY,0BAKxBrI,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CAAM8H,MAAI,EAACC,GAAI,GACXhI,EAAAC,EAAAC,cAAA,OAAKmC,MAAO,CAAC4F,QAAS,KAClBjI,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAAQoC,MAAO,CAAC0G,OAAQ,IAChB5G,QAAQ,YACRjB,MAAM,UACN2H,SAAUrC,KAAEmI,QAAQZ,GACpB9M,QAASZ,KAAK2N,WAJtB,gCAOAhO,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CACIC,aAAa,EACbC,cAAc,EACdzF,MAAOiE,EACPhE,SAAUvC,KAAKmN,kBACf/F,QAASA,EACTsH,mBAAmB,EACnB1G,YAAY,uBAEhBrI,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CACIC,aAAa,EACbxF,MAAOoL,EACPnL,SAAUvC,KAAKyN,kBACfrG,QAAS+G,EACTO,mBAAmB,EACnB3G,cAAc,EACdC,YAAY,0BAM5BrI,EAAAC,EAAAC,cAAC+I,GAAD,CAAchE,QAAS5E,KAAK6F,MAAMjB,QAASE,kBAAmB9E,KAAK8E,4BA5MxD9D,aAsNZsI,eAJS,SAAApI,GACpB,MAAO,CAACuE,QAD8DvE,EAAhDuE,QACLwI,aADqD/M,EAAvC+M,aACAT,QADuCtM,EAAzBsM,QACLR,WAD8B9L,EAAhB8L,aAMtD,CAACpK,aAAY+K,UPtLQ,SAAC/H,GAAD,sBAAA+I,EAAApN,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAnD,EAAAoD,KAAY,SAAA4L,EAAM1L,GAAN,IAAAC,EAAA,OAAAJ,EAAAnD,EAAAwD,KAAA,SAAAyL,GAAA,cAAAA,EAAAvL,KAAAuL,EAAAtL,MAAA,cAAAsL,EAAAtL,KAAA,EACVC,EAAIwG,KAAK,qBAAsBpE,GADrB,OAC3BzC,EAD2B0L,EAAAnL,KAEjCR,EAAS,CACLS,KCzCgC,4BD0ChCC,QAAST,IAJoB,wBAAA0L,EAAAhL,SAAA+K,EAAA5O,SAAZ,gBAAA8O,GAAA,OAAAH,EAAA5K,MAAA/D,KAAAgE,YAAA,IOsLGoJ,WPtKF,iCAAA2B,EAAAxN,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAnD,EAAAoD,KAAM,SAAAgM,EAAM9L,GAAN,IAAAC,EAAA,OAAAJ,EAAAnD,EAAAwD,KAAA,SAAA6L,GAAA,cAAAA,EAAA3L,KAAA2L,EAAA1L,MAAA,cAAA0L,EAAA1L,KAAA,EACLC,EAAIC,IAAI,YADH,OACtBN,EADsB8L,EAAAvL,KAE5BR,EAAS,CACLS,KC3DkB,cD4DlBC,QAAST,IAJe,wBAAA8L,EAAApL,SAAAmL,EAAAhP,SAAN,gBAAAkP,GAAA,OAAAH,EAAAhL,MAAA/D,KAAAgE,YAAA,IOsKcC,gBAAe8J,UP9K9B,SAACoB,GAAD,sBAAAC,EAAA7N,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAnD,EAAAoD,KAAY,SAAAqM,EAAMnM,GAAN,IAAAC,EAAA,OAAAJ,EAAAnD,EAAAwD,KAAA,SAAAkM,GAAA,cAAAA,EAAAhM,KAAAgM,EAAA/L,MAAA,cAAA+L,EAAA/L,KAAA,EACVC,EAAIwG,KAAK,WAAYmF,GADX,OAC3BhM,EAD2BmM,EAAA5L,KAEjCR,EAAS,CACLS,KCpD+B,2BDqD/BC,QAAST,IAJoB,wBAAAmM,EAAAzL,SAAAwL,EAAArP,SAAZ,gBAAAuP,GAAA,OAAAH,EAAArL,MAAA/D,KAAAgE,YAAA,KO4KVsF,CAGboD,mCCzNI8C,uBACF,SAAAA,EAAYvP,GAAO,IAAAgF,EAAA,OAAA1D,OAAA2D,EAAA,EAAA3D,CAAAvB,KAAAwP,IACfvK,EAAA1D,OAAA4D,EAAA,EAAA5D,CAAAvB,KAAAuB,OAAA6D,EAAA,EAAA7D,CAAAiO,GAAAnK,KAAArF,KAAMC,KAiBV2G,YAAc,SAACL,GACXtB,EAAKO,SAAS,CAACe,mBACf6C,IAAE,UAAUqG,KAAK,IACblJ,GACAtB,EAAKhF,MAAMgE,cAAcsC,EAAejE,OAAOiD,KAAK,WAC1C,IAACyH,EAAc/H,EAAKhF,MAAnB+M,WACH9I,EAAWqC,EAAejE,MAE1BoN,EAAgB,SAAhBA,EAAiBxL,GACjB,IAAI0B,EAASmH,GAA2BC,EAAY,WAAY9I,GAC5DyL,GAAW/J,EAAO+J,SAAW,IAC5BtI,IAAI,SAAAuI,GAAM,OAAIA,EAAOtC,WACrBjG,IAAI,SAACiG,GACF,IAAID,EAASN,GAA4BC,EAAY,WAAYM,GAC7DuC,EAAe,GAUvB,OATIxC,EAAOtG,QAAQ,SAAAsG,GACXwC,EAAavC,SAAWD,EAAOC,SAC3BD,EAAO5H,UACPoK,EAAapK,QAAU4H,EAAO5H,SAE9B4H,EAAOyC,WACPD,EAAaC,SAAWzC,EAAOyC,YAGpCD,IACRxI,IAAI,SAAAgG,GAAM,MAAK,CAACuC,OAAQvC,EAAO5H,QAAQwH,OAAO,SAAA2C,GAAM,OAAIA,EAAO1L,WAAa0B,EAAO1B,WAAU,GAAI4L,SAAUzC,EAAOyC,YAErH,MAAO,CAAC,CACJhK,KAAMF,EAAOE,KACbiK,MAAO,OAASnK,EAAOM,KAAO,IAC9B8J,UAAWL,EAAQtI,IAAI,SAAA4I,GACnB,MAAQ,CACJL,OAAQ,CACJ9J,KAAMmK,EAASL,OAAO9J,KACtBiK,MAAO,OAASE,EAASL,OAAO1J,KAAO,IACvCgK,MAAO/J,KAAEgK,KAAKF,EAASL,OAAQ,CAAC,cAEpCE,UAAWG,EAASH,UAAY,IAC3BzI,IAAI,SAAA+I,GAAK,OAAKV,EAAcU,EAAMlM,UAAU,QAGzDgM,MAAO/J,KAAEgK,KAAKvK,EAAQ,CAAC,gBAkB3BiI,EAAItM,OAAAuM,GAAA,EAAAvM,CAAA0D,GAGFoL,EAAS,CACXC,OAAQ,SACRC,OAAO,EACPC,OAAQ,IACRlG,MAAO,KACPmG,UAAW,CACPC,UAAW,SAAU5K,EAAMoK,GACnB/J,KAAE1C,IAAIyM,EAAO,aACbrC,EAAKjH,YAAY,CAACtE,MAAO4N,EAAMhM,SAAU9C,MAAO0E,KAGxD6K,aAAc,SAAU7K,EAAMoK,GAG1B,OADAA,EAAQnD,GAA2BC,EAAY,YAD/CkD,EAAQA,GAAS,IACgDhM,UACjE,oEAAAoI,OACExG,EADF,uCAAAwG,OAEE,CAAC4D,EAAMnK,UAAWmK,EAAMlK,WAAWiH,OAAO,SAAA2D,GAAI,OAAIA,IAAMvC,KAAK,OAF/D,qEAAA/B,OAIE4D,EAAMjK,WAJR,wCAQRyC,OAAQ,CACJmI,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,GAEVC,UAAW,IACX/G,OAAQ,CACJgH,KAAM,OACNC,OAAQ,SACRC,SAAU,WACVC,KAAM,aAIRC,EAAiBlI,IAAEmI,QAAO,EAAM,GAAIlB,GAC1CiB,EAAepH,OAAOgH,KAAO,WAC7BI,EAAed,OAAS,IAExB,IAAIU,EAzDqB,SAAChN,GACtB,IAAM0B,EAASmH,GAA2BC,EAAY,WAAY9I,GAClE,GAAI0B,EAAOyH,OAAQ,CACf,IAAIE,EAAYR,GAA4BC,EAAY,WAAY7G,KAAE1C,IAAImC,EAAQ,oBAC7EqH,OAAO,SAAAkC,GAAM,OAAIA,EAAO1J,UACxB4B,IAAI,SAAAzB,GAAM,OAAIA,EAAOH,UAAS,GAC9B4B,IAAI,SAAAzB,GAAM,OAAIA,EAAO1B,WAC1B,OAAOwL,EAAcnC,EAAU,IAE/B,OAAOmC,EAAcxL,GAgDlBsN,CAAmBtN,GAC1BuN,EAAiB1E,GAA4BmE,EAAM,OAAQ,IAAI7J,IAAI,SAAAzB,GAAM,OAAIA,EAAOsK,MAAMhM,WAC1FwN,EAAY,CAAC,CAAC5L,KAAM,4BAA0BiK,MAAO,oBAExDxO,OAAAoQ,GAAA,EAAApQ,CAAI,IAAIqQ,IAAI7E,GAA4BC,EAAY,WAAY,IAC5DC,OAAO,SAAArH,GAAM,OAAKA,EAAOyH,SACzBhG,IAAI,SAAAzB,GAAM,OAAIA,EAAO1B,WACrB+I,OAAO,SAAA/I,GACH,OAAQiC,KAAE+G,SAASuE,EAAgBvN,OACvCmD,IAAI,SAAAnD,GAAQ,OAAI6I,GAA2BC,EAAY,WAAY9I,KACnE6C,QAAQ,SAAAnB,GACL8L,EAAUnF,KAAK,CACXzG,KAAMF,EAAOE,KACbiK,MAAO,OAASnK,EAAOM,KAAO,IAAM,YACpCgK,MAAO/J,KAAEgK,KAAKvK,EAAQ,CAAC,iBAInCiM,KAAMC,KAAKJ,EAAWJ,GACtBO,KAAMC,KAAKZ,EAAMb,MA1IzBpL,EAAKY,MAAQ,CACTJ,QAAS,GACTc,eAAgB,MAEpBsE,OAAO1E,EAAIA,KANIlB,mFAUC,IAAAkC,EAAAnH,KAChBA,KAAKC,MAAM2C,aAAa2C,KAAK,WACzB4B,EAAK3B,SAAS,CACVC,QAAS0B,EAAKlH,MAAMwF,6CAqIvB,IAAAmI,EAC6B5N,KAAK6F,MAAhCJ,EADFmI,EACEnI,QAASc,EADXqH,EACWrH,eAEZa,EAAU3B,EAAQ4B,IAAI,SAAAzB,GAAM,MAAK,CACjCtD,MAAOsD,EAAO1B,SACd9C,MAAOwE,EAAOE,QAIlB,OACInG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CAAM4H,WAAS,EAACC,UAAU,OACtB9H,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CAAM8H,MAAI,EAACC,GAAI,IACXhI,EAAAC,EAAAC,cAAA,OAAKmC,MAAO,CAAC4F,QAAS,KAClBjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CACIC,aAAa,EACbC,cAAc,EACdzF,MAAOiE,EACPhE,SAAUvC,KAAK4G,YACf7F,WAAW,EACXqG,QAASA,EACTY,YAAY,mDAGpBrI,EAAAC,EAAAC,cAAA,OAAKU,GAAG,oBA3KPS,cAuLVsI,eAJS,SAAApI,GACpB,MAAO,CAACuE,QADuCvE,EAAzBuE,QACLuH,WAD8B9L,EAAhB8L,aAM/B,CAACpK,aAAYqB,iBAFFqF,CAGbkG,aClKauC,eAhCX,SAAAA,EAAY9R,GAAO,IAAAgF,EAAA,OAAA1D,OAAA2D,EAAA,EAAA3D,CAAAvB,KAAA+R,IACf9M,EAAA1D,OAAA4D,EAAA,EAAA5D,CAAAvB,KAAAuB,OAAA6D,EAAA,EAAA7D,CAAAwQ,GAAA1M,KAAArF,KAAMC,KACD4F,MAAQ,CAAEnE,MAAO,KAAMsQ,UAAW,MAFxB/M,iFAKDvD,EAAOsQ,GAErBhS,KAAKwF,SAAS,CACV9D,MAAOA,EACPsQ,UAAWA,qCAKf,OAAIhS,KAAK6F,MAAMmM,UAGPrS,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,WAASmC,MAAO,CAAEiQ,WAAY,aACzBjS,KAAK6F,MAAMnE,OAAS1B,KAAK6F,MAAMnE,MAAMwQ,WACtCvS,EAAAC,EAAAC,cAAA,WACCG,KAAK6F,MAAMmM,UAAUG,iBAM/BnS,KAAKC,MAAM6P,gBA7BE9O,aCYtBoR,eAEF,SAAAA,IAAc,IAAAnN,EAAA,OAAA1D,OAAA2D,EAAA,EAAA3D,CAAAvB,KAAAoS,IACVnN,EAAA1D,OAAA4D,EAAA,EAAA5D,CAAAvB,KAAAuB,OAAA6D,EAAA,EAAA7D,CAAA6Q,GAAA/M,KAAArF,QACK6F,MAAQ,CACToF,YAAa,IAHPhG,mFAOM,IAAAkC,EAAAnH,KAChBA,KAAKC,MAAMoS,iBAAiB9M,KAAK,WAC7B4B,EAAK3B,SAAS,CACVyF,YAAa9D,EAAKlH,MAAMgL,yDAOhC,MAAoB,UADEjL,KAAK6F,MAApBoF,YAGCtL,EAAAC,EAAAC,cAACyS,GAAA,EAAD,KACI3S,EAAAC,EAAAC,cAACyS,GAAA,EAAD,CAAOC,KAAK,cAAcnK,UAAWoH,KACrC7P,EAAAC,EAAAC,cAACyS,GAAA,EAAD,CAAOC,KAAK,UAAUnK,UAAWpD,KACjCrF,EAAAC,EAAAC,cAACyS,GAAA,EAAD,CAAOC,KAAK,gBAAgBnK,UAAWsE,KACvC/M,EAAAC,EAAAC,cAACyS,GAAA,EAAD,CAAOE,OAAK,EAACD,KAAK,IAAInK,UAAWoH,MAKrC7P,EAAAC,EAAAC,cAACyS,GAAA,EAAD,KACI3S,EAAAC,EAAAC,cAACyS,GAAA,EAAD,CAAOE,OAAK,EAACD,KAAK,IAAInK,UAAWoH,KACjC7P,EAAAC,EAAAC,cAACyS,GAAA,EAAD,CAAOC,KAAK,cAAcnK,UAAWoH,uCAOjD,OACI7P,EAAAC,EAAAC,cAAC4S,GAAD,KACI9S,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6S,GAAA,EAAD,KAEI/S,EAAAC,EAAAC,cAAC8S,GAAD,CAAQ1H,YAAajL,KAAK6F,MAAMoF,cAG/BjL,KAAK4S,2BA/CZ5R,aA4DHsI,eAJS,SAAApI,GACpB,MAAO,CAAC+J,YAD+B/J,EAAjB+J,cAKtB,CAACoH,eVEwB,iCAAAQ,EAAAtR,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAnD,EAAAoD,KAAM,SAAA8P,EAAM5P,GAAN,IAAAC,EAAA,OAAAJ,EAAAnD,EAAAwD,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,cAAAwP,EAAAxP,KAAA,EACRC,EAAIC,IAAI,gBADA,OACzBN,EADyB4P,EAAArP,KAE/BR,EAAS,CACLS,KCxEuB,mBDyEvBC,QAAST,IAJkB,wBAAA4P,EAAAlP,SAAAiP,EAAA9S,SAAN,gBAAAgT,GAAA,OAAAH,EAAA9O,MAAA/D,KAAAgE,YAAA,KUHdsF,CACO8I,IC/DFa,QACW,cAA7BpI,OAAOC,SAASoI,UAEe,UAA7BrI,OAAOC,SAASoI,UAEhBrI,OAAOC,SAASoI,SAASC,MACvB,kFCbSC,GAAA,WAAwB,IAAvBvN,EAAuB7B,UAAA6I,OAAA,QAAAwG,IAAArP,UAAA,GAAAA,UAAA,GAAf,GAAIsP,EAAWtP,UAAA6I,OAAA,EAAA7I,UAAA,QAAAqP,EACnC,OAAQC,EAAO3P,MACX,IXNkB,aWQlB,IXNmB,cWOf,OAAO2P,EAAO1P,QAAQ2P,KAC1B,QACI,OAAO1N,ICIJ2N,GATKC,aAAgB,CAChC1K,KAAM2K,KACN9N,OAAQwN,GACRpG,WCNW,WAAwB,IAAvBnH,EAAuB7B,UAAA6I,OAAA,QAAAwG,IAAArP,UAAA,GAAAA,UAAA,GAAf,GAAIsP,EAAWtP,UAAA6I,OAAA,EAAA7I,UAAA,QAAAqP,EACnC,OAAQC,EAAO3P,MACX,IbAsB,kBaClB,OAAO2P,EAAO1P,QAAQ2P,KAC1B,QACI,OAAO1N,IDEfJ,QAAS2N,GACT5F,QERW,WAAwB,IAAvB3H,EAAuB7B,UAAA6I,OAAA,QAAAwG,IAAArP,UAAA,GAAAA,UAAA,GAAf,GAAIsP,EAAWtP,UAAA6I,OAAA,EAAA7I,UAAA,QAAAqP,EACnC,OAAQC,EAAO3P,MACX,IdDkB,ccEd,OAAO2P,EAAO1P,QAAQ2P,KAC1B,QACI,OAAO1N,IFIfoF,YGTW,WAAwB,IAAvBpF,EAAuB7B,UAAA6I,OAAA,QAAAwG,IAAArP,UAAA,GAAAA,UAAA,GAAf,GAAIsP,EAAWtP,UAAA6I,OAAA,EAAA7I,UAAA,QAAAqP,EACnC,OAAQC,EAAO3P,MACX,IfEuB,mBeDnB,OAAO2P,EAAO1P,QAAQ2P,KAC1B,QACI,OAAO1N,gBCEb8N,GAD4BC,aAAgBC,KAAhBD,CAA4BE,KAChDC,CAA0BC,IAExCC,IAASC,OACLvU,EAAAC,EAAAC,cAACsU,EAAA,EAAD,CAAUR,MAAOA,IACbhU,EAAAC,EAAAC,cAACuU,GAAD,OAEFC,SAASC,eAAe,SNgHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlP,KAAK,SAAAmP,GACjCA,EAAaC","file":"static/js/main.d7ddeb4e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass ConfirmatonDialog extends Component {\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                open={this.props.open}\r\n                onClose={this.props.handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Are you sure?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        This person will be permanently deleted from our records.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={this.props.delete} color=\"primary\" autoFocus>\r\n                        OK\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConfirmatonDialog;","import Typography from '@material-ui/core/Typography';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React from 'react';\r\n\r\nexport const renderTextField = ({input, label, meta}) => {\r\n    return (  <div><TextField fullWidth={true}\r\n            label={label}\r\n            {...input}\r\n            error={meta.touched && meta.error ? true : false}\r\n            autoComplete=\"off\"\r\n        />\r\n\r\n            <Typography variant=\"caption\" gutterBottom>\r\n                <span style={{color: 'red'}}> {meta.touched && meta.error}</span>\r\n            </Typography>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const renderRadioGroup = ({input, meta, ...rest}) => {\r\n    return (<div><RadioGroup\r\n        {...input}\r\n        {...rest}\r\n        value={input.value}\r\n        onChange={(event, value) => input.onChange(value)}\r\n\r\n    />\r\n        <Typography variant=\"caption\" gutterBottom>\r\n            <span style={{color: 'red'}}> {meta.touched && meta.error}</span>\r\n        </Typography>\r\n\r\n    </div>)\r\n};","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    //baseURL: 'http://localhost:8080',\r\n    withCredentials: true\r\n})","import api from '../apis/api';\r\nimport {\r\n    GET_MEMBER,\r\n    CREATE_OR_UPDATE_MEMBER,\r\n    DELETE_MEMBER,\r\n    GET_MEMBERS,\r\n    ADD_SPOUSAL_RELATIONSHIP,\r\n    GET_COUPLES,\r\n    GET_FAMILY_TREE,\r\n    ADD_PARENTAL_RELATIONSHIP,\r\n    GET_USER_CONTEXT\r\n} from './types';\r\n\r\nexport const getMember = (memberId) => async dispatch => {\r\n    const response = await api.get('/members/' + memberId);\r\n    dispatch({\r\n        type: GET_MEMBER,\r\n        payload: response\r\n    })\r\n};\r\n\r\nexport const createOrUpdateMember = (member) => async dispatch => {\r\n    const response = await api.post('/members', member);\r\n    dispatch({\r\n        type: CREATE_OR_UPDATE_MEMBER,\r\n        payload: response\r\n    })\r\n};\r\n\r\nexport const deleteMember = (memberId) => async dispatch => {\r\n    const response = await api.delete('/members/' + memberId);\r\n    dispatch({\r\n        type: DELETE_MEMBER,\r\n        payload: response\r\n    })\r\n};\r\n\r\nexport const getMembers = () => async dispatch => {\r\n    const response = await api.get('/members');\r\n    dispatch({\r\n        type: GET_MEMBERS,\r\n        payload: response\r\n    })\r\n};\r\n\r\nexport const addParent = (member) => async dispatch => {\r\n    const response = await api.post('/parents/addParent', member);\r\n    dispatch({\r\n        type: ADD_PARENTAL_RELATIONSHIP,\r\n        payload: response\r\n    })\r\n};\r\n\r\nexport const addCouple = (couple) => async dispatch => {\r\n    const response = await api.post('/parents', couple);\r\n    dispatch({\r\n        type: ADD_SPOUSAL_RELATIONSHIP,\r\n        payload: response\r\n    })\r\n};\r\n\r\nexport const getParents = () => async dispatch => {\r\n    const response = await api.get('/parents');\r\n    dispatch({\r\n        type: GET_COUPLES,\r\n        payload: response\r\n    })\r\n};\r\n\r\nexport const getFamilyTree = (memberId) => async dispatch => {\r\n    const response = await api.get('/familyTree/' + memberId);\r\n    dispatch({\r\n        type: GET_FAMILY_TREE,\r\n        payload: response\r\n    })\r\n};\r\n\r\nexport const getUserContext= () => async dispatch => {\r\n    const response = await api.get('/userContext');\r\n    dispatch({\r\n        type: GET_USER_CONTEXT,\r\n        payload: response\r\n    })\r\n};","export const CREATE_OR_UPDATE_MEMBER = 'CREATE_OR_UPDATE_MEMBER';\r\nexport const GET_MEMBER = 'GET_MEMBER';\r\nexport const DELETE_MEMBER = 'DELETE_MEMBER';\r\nexport const GET_MEMBERS = 'GET_MEMBERS';\r\nexport const ADD_SPOUSAL_RELATIONSHIP= 'ADD_SPOUSAL_RELATIONSHIP';\r\nexport const GET_COUPLES= 'GET_COUPLES';\r\nexport const GET_FAMILY_TREE= 'GET_FAMILY_TREE';\r\nexport const ADD_PARENTAL_RELATIONSHIP= 'ADD_PARENTAL_RELATIONSHIP';\r\nexport const GET_USER_CONTEXT= 'GET_USER_CONTEXT';","import React, {Component} from \"react\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nclass Notification extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={!!this.props.message}\r\n                autoHideDuration={5000}\r\n                onClose={this.props.closeNotification}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.props.message}</span>}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification;","import React, {Component} from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport validate from \"./validate\";\r\nimport ConfirmationDialog from \"../../utils/ConfirmatonDialog\";\r\nimport {renderTextField, renderRadioGroup} from \"./FormHelper\";\r\nimport {connect} from \"react-redux\";\r\nimport {getMembers, getMember, deleteMember, createOrUpdateMember} from \"../../actions\";\r\nimport Select from 'react-select';\r\nimport Notification from '../../utils/Notification'\r\nimport _ from 'lodash';\r\n\r\nclass Member extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            edit: false,\r\n            members: [],\r\n            memberId: null,\r\n            selectedMember: null\r\n        };\r\n    }\r\n\r\n    reloadMembers = () => {\r\n        this.props.getMembers().then(() => {\r\n            this.setState({\r\n                members: this.props.members\r\n            });\r\n        });\r\n    };\r\n\r\n    // As soon as this component is mounted, it will fetch all the members from the server\r\n    componentDidMount() {\r\n        this.reloadMembers();\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({open: false});\r\n    };\r\n\r\n    onSubmit = (formValues) => {\r\n        const member = {\r\n            memberId: this.state.memberId,\r\n            name: formValues.name,\r\n            birthYear: formValues.birthYear,\r\n            deathYear: formValues.deathYear,\r\n            birthPlace: formValues.birthPlace,\r\n            sex: formValues.sex\r\n        };\r\n        if (_.isEqual(this.props.member, formValues)) {\r\n            this.setState({\r\n                message: 'Nothing to update'\r\n            });\r\n            return;\r\n        }\r\n        this.props.createOrUpdateMember(member).then(()=> {\r\n            this.setState({\r\n                memberId: null,\r\n                edit: false,\r\n                selectedMember: null,\r\n                message: this.state.edit ? 'Successfully updated member.' : 'Successfully created member.'\r\n            });\r\n            this.props.reset();\r\n            this.reloadMembers();\r\n        });\r\n    };\r\n\r\n    delete = () => {\r\n        this.props.deleteMember(this.state.memberId).then(() => {\r\n            this.setState({\r\n                memberId: null,\r\n                open: false,\r\n                edit: false,\r\n                selectedMember: null,\r\n                message: 'Successfully deleted member'\r\n            });\r\n            this.props.reset();\r\n            this.reloadMembers();\r\n        }).catch((error) => {\r\n            this.setState({\r\n                message: \"This member cannot be deleted as it is related to other members.\",\r\n                selectedMember: null,\r\n                open: false\r\n            });\r\n        });\r\n    };\r\n\r\n    // Opens the modal for user confirmation\r\n    handleDelete = (memberId) => {\r\n        this.setState({\r\n            open: true,\r\n            memberId: memberId\r\n        });\r\n    };\r\n\r\n    handleClick = (selectedMember) => {\r\n        \r\n        this.setState({selectedMember});\r\n        this.props.reset();\r\n        this.setState({\r\n            edit: false,\r\n            memberId: null\r\n        });\r\n\r\n        if (selectedMember) {\r\n            const memberId = selectedMember.value;\r\n            this.props.getMember(memberId).then(() => {\r\n                const {member} = this.props;\r\n                Object.keys(member).forEach(key => {\r\n                    this.props.change(key, member[key]);\r\n                });\r\n                this.setState({\r\n                    edit: true,\r\n                    memberId: memberId,\r\n                    member: member\r\n                });\r\n            }).catch((error) => {\r\n                this.setState({\r\n                    message: \"Error fetching details\",\r\n                    selectedMember: null\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    cancel = () => {\r\n        this.setState({\r\n            edit: false,\r\n            selectedMember: null,\r\n            memberId: null\r\n        });\r\n        this.props.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.props.reset();\r\n    };\r\n\r\n    closeNotification = () => {\r\n        this.setState({\r\n            message: null\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let options = this.state.members.map(member => ({\r\n            value: member.memberId,\r\n            label: member.name\r\n        }));\r\n\r\n\r\n        return (\r\n            <div>\r\n                <form\r\n                    autoComplete=\"off\"\r\n                    onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n                >\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={6}>\r\n                            <div style={{padding: 50}}>\r\n                                <Select\r\n                                    isClearable={true}\r\n                                    isSearchable={true}\r\n                                    value={this.state.selectedMember}\r\n                                    onChange={this.handleClick}\r\n                                    options={options}\r\n                                    placeholder=\"Select a member to modify...\"\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={6} style={{padding: 50}}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                style={{marginBottom: 20, display: this.state.edit ? 'block' : 'none'}}\r\n                                onClick={() => {\r\n                                    this.handleDelete(this.state.memberId)\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                            <Grid item xs={12}>\r\n                                <Field\r\n                                    name=\"name\"\r\n                                    component={renderTextField}\r\n                                    label=\"Name *\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Field\r\n                                    name=\"birthPlace\"\r\n                                    component={renderTextField}\r\n                                    label=\"Place of birth *\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Field\r\n                                    name=\"birthYear\"\r\n                                    component={renderTextField}\r\n                                    label=\"Year of birth *\"\r\n                                    type=\"number\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Field\r\n                                    name=\"deathYear\"\r\n                                    component={renderTextField}\r\n                                    label=\"Year of death\"\r\n                                    type=\"number\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Field name=\"sex\" component={renderRadioGroup}>\r\n                                    <FormControlLabel\r\n                                        value=\"F\"\r\n                                        control={<Radio />}\r\n                                        label=\"Female\"\r\n                                    />\r\n                                    <FormControlLabel\r\n                                        value=\"M\"\r\n                                        control={<Radio />}\r\n                                        label=\"Male\"\r\n                                    />\r\n                                </Field>\r\n                            </Grid>\r\n                            <Grid >\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={this.props.pristine}\r\n                                    type={'submit'}\r\n                                >\r\n                                    {this.state.edit ? \"Update\" : \"Create\"}\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    style={{margin: \"20px\"}}\r\n                                    onClick={this.state.edit ? this.cancel : this.reset}\r\n                                >\r\n                                    {this.state.edit ? \"Cancel\" : \"Reset\"}\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <ConfirmationDialog\r\n                        open={this.state.open}\r\n                        handleClose={this.handleClose}\r\n                        delete={this.delete}\r\n                    />\r\n                    <Notification message={this.state.message} closeNotification={this.closeNotification}/>\r\n                </form>\r\n            </ div >);\r\n    }\r\n}\r\n\r\nconst wrappedForm = reduxForm({\r\n    form: \"MemberForm\",\r\n    validate\r\n})(Member);\r\n\r\nconst mapStateToProps = ({members, member}) => {\r\n    return {members, member};\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {getMembers, getMember, deleteMember, createOrUpdateMember}\r\n)(wrappedForm);","import $ from 'jquery';\r\n\r\nexport default function (values) {\r\n    const errors = {};\r\n    const requiredFields = [\r\n        'name',\r\n        'birthPlace',\r\n        'birthYear'\r\n    ];\r\n    requiredFields.forEach(field => {\r\n        if (!values[field]) {\r\n            errors[field] = 'This field is required';\r\n        }\r\n    });\r\n\r\n    const numericFields = ['birthYear', 'deathYear'];\r\n    numericFields.forEach(field => {\r\n        if (values[field] && !$.isNumeric(values[field])) {\r\n            errors[field] = errors[field] || 'This field should be numeric';\r\n        }\r\n    });\r\n\r\n    if (values['deathYear'] <= values['birthYear']) {\r\n        errors['deathYear'] = errors['deathYear'] || 'Death year should be greater than birth year.';\r\n    }\r\n    return errors;\r\n}\r\n","import React, {Component} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faUsers} from '@fortawesome/free-solid-svg-icons';\r\nimport {Link} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    grow: {\r\n        width: 300\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n    }\r\n};\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({value});\r\n    };\r\n\r\n    logout = () => {\r\n        window.location.href = 'login';\r\n    };\r\n\r\n    generateTabs = () => {\r\n        const {userContext} = this.props,\r\n            {value} = this.state;\r\n        if (userContext === 'admin') {\r\n            return (\r\n                <Tabs value={value} onChange={this.handleChange}>\r\n                    <Tab label=\"View Family Tree\" component={Link} to=\"/familyTree\"/>\r\n                    <Tab label=\"Member Manager\" component={Link} to=\"/member\"/>\r\n                    <Tab label=\"Relationship Manager\" component={Link} to=\"/relationship\"/>\r\n                    <Tab label=\"Logout\" component={Button} onClick={this.logout}/>\r\n                </Tabs>\r\n            )\r\n        } else {\r\n            return (\r\n                <Tabs value={value} onChange={this.handleChange}>\r\n                    <Tab label=\"View Family Tree\" component={Link} to=\"/familyTree\"/>\r\n                    <Tab label=\"Logout\" component={Button} onClick={this.logout}/>\r\n                </Tabs>\r\n            )\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton styles={styles.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                            <FontAwesomeIcon icon={faUsers}/>\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" color=\"inherit\" style={styles.grow}>\r\n                            Family Tree\r\n                        </Typography>\r\n                        {this.generateTabs()}\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","// Return an array of objects according to key, value, or key and value matching\r\nexport function getObjects(obj, key, val) {\r\n    var objects = [];\r\n    for (var i in obj) {\r\n        if (!obj.hasOwnProperty(i)) continue;\r\n        if (typeof obj[i] == 'object') {\r\n            objects = objects.concat(getObjects(obj[i], key, val));\r\n        } else\r\n        //if key matches and value matches or if key matches and value is not passed (eliminating the case where key matches but passed value does not)\r\n        if (i == key && obj[i] == val || i == key && val == '') { //\r\n            objects.push(obj);\r\n        } else if (obj[i] == val && key == ''){\r\n            //only add if the object is not already in the array\r\n            if (objects.lastIndexOf(obj) == -1){\r\n                objects.push(obj);\r\n            }\r\n        }\r\n    }\r\n    return objects;\r\n}\r\n\r\nexport function getObject(obj, key, val) {\r\n    return getObjects(obj, key, val)[0] || {};\r\n}\r\n\r\n// Return an array of values that match on a certain key\r\nexport function getValues(obj, key) {\r\n    var objects = [];\r\n    for (var i in obj) {\r\n        if (!obj.hasOwnProperty(i)) continue;\r\n        if (typeof obj[i] == 'object') {\r\n            objects = objects.concat(getValues(obj[i], key));\r\n        } else if (i == key) {\r\n            objects.push(obj[i]);\r\n        }\r\n    }\r\n    return objects;\r\n}","import React, {Component} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {connect} from \"react-redux\";\r\nimport {getMembers, addCouple, getParents, getFamilyTree, addParent} from \"../../actions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport _ from 'lodash';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/lib/animated';\r\nimport Notification from '../../utils/Notification';\r\nimport * as FamilyTreeHelper from '../../utils/FamilyTreeHelper';\r\n\r\nclass Relationship extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            members: [],\r\n            parents: [],\r\n            relationship: {},\r\n            member: {},\r\n            selectedOptions: null,\r\n            selectedMember: null\r\n        };\r\n    }\r\n\r\n    loadMembers = () => {\r\n        this.props.getMembers().then(() => {\r\n            this.setState({\r\n                members: this.props.members\r\n            });\r\n        });\r\n    };\r\n\r\n    // As soon as this component is mounted, it will fetch all the members from the server\r\n    componentDidMount() {\r\n        this.loadMembers();\r\n    }\r\n\r\n    handleClick = (selectedOptions) => {\r\n        if (selectedOptions.length === 0) {\r\n            this.loadMembers();\r\n        }\r\n\r\n        if (selectedOptions.length === 1) {\r\n            this.props.getFamilyTree(selectedOptions[0].memberId).then(() => {\r\n                let list = FamilyTreeHelper.getObjects(this.props.familyTree, 'memberId', '')\r\n                    .map(member => member.memberId);\r\n                this.setState({\r\n                    members: this.state.members.filter(member => !_.includes(list, member.memberId))\r\n                })\r\n            });\r\n        }\r\n\r\n        if (selectedOptions.length <= 2) {\r\n            this.setState({selectedOptions});\r\n        }\r\n    };\r\n\r\n    handleMemberClick = (selectedMember) => {\r\n        this.setState({selectedMember});\r\n        if (_.get(selectedMember, 'memberId')) {\r\n            let {memberId} = selectedMember;\r\n            this.props.getParents().then(()=> {\r\n                this.props.getFamilyTree(memberId).then(() => {\r\n                    var list = FamilyTreeHelper.getObjects(this.props.familyTree, 'parentId', '')\r\n                        .map(parent => parent.parentId)\r\n                        .filter(parentIds => parentIds);\r\n                    this.setState({\r\n                        parents: this.props.parents.filter(parent => !_.includes(list, parent.parentId))\r\n                    })\r\n                })\r\n            });\r\n\r\n        } else {\r\n            this.loadMembers();\r\n        }\r\n    };\r\n\r\n    handleParentClick = (selectedParent) => {\r\n        this.setState({selectedParent});\r\n    };\r\n\r\n    closeNotification = () => {\r\n        this.setState({\r\n            message: null\r\n        });\r\n    };\r\n\r\n    addParent = () => {\r\n        const {selectedMember, selectedParent} = this.state;\r\n        let member = {\r\n          memberId: selectedMember.memberId,\r\n            parent: {\r\n              parentId: selectedParent.parentId\r\n            }\r\n        };\r\n        var that = this;\r\n        this.props.addParent(member).then(()=> {\r\n            that.setState({\r\n                message: \"Parental relationship successfully added.\",\r\n                selectedMember: null,\r\n                selectedParent:[]\r\n            });\r\n        });\r\n    };\r\n\r\n\r\n    addCouple = () => {\r\n        let parent = {\r\n            members: []\r\n        };\r\n        const {selectedOptions} = this.state;\r\n        selectedOptions.forEach((option) => {\r\n            parent.members.push(option);\r\n        });\r\n\r\n        var that = this;\r\n        this.props.addCouple(parent)\r\n            .then((response) => {\r\n                that.setState({\r\n                    message: \"Spousal relationship successfully added.\"\r\n                });\r\n            });\r\n        this.setState({\r\n            selectedOptions: null\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {members, parents, selectedMember, selectedOptions, selectedParent} = this.state;\r\n\r\n        let options = [];\r\n        members.map(member => {\r\n            options.push(\r\n                {\r\n                    memberId: member.memberId,\r\n                    value: member.memberId,\r\n                    label: member.name\r\n                }\r\n            )\r\n        });\r\n\r\n        let parentOptions = [];\r\n        parents.map(parent => {\r\n            let labelArray = [];\r\n            parent.members.forEach((member) => {\r\n                labelArray.push(member.name);\r\n            });\r\n            let label = labelArray.join(' & ');\r\n            parentOptions.push(\r\n                {\r\n                    parentId: parent.parentId,\r\n                    value: parent.parentId,\r\n                    label: label\r\n                }\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={6}>\r\n                        <div style={{padding: 50}}>\r\n                            <Button style={{margin: 10}}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={_.isEmpty(selectedOptions) || _.get(selectedOptions, 'length') !== 2}\r\n                                    onClick={this.addCouple}>\r\n                                Create Spousal Relationship\r\n                            </Button>\r\n                            <Select\r\n                                isClearable={true}\r\n                                isSearchable={true}\r\n                                value={this.state.selectedOptions}\r\n                                onChange={this.handleClick}\r\n                                options={options}\r\n                                isMulti\r\n                                components={makeAnimated()}\r\n                                closeMenuOnSelect={false}\r\n                                placeholder=\"Select 2 members...\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <div style={{padding: 50}}>\r\n                            <Button style={{margin: 10}}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={_.isEmpty(selectedParent)}\r\n                                    onClick={this.addParent}>\r\n                                Update Parental Relationship\r\n                            </Button>\r\n                            <Select\r\n                                isClearable={true}\r\n                                isSearchable={true}\r\n                                value={selectedMember}\r\n                                onChange={this.handleMemberClick}\r\n                                options={options}\r\n                                closeMenuOnSelect={true}\r\n                                placeholder=\"Select a member...\"\r\n                            />\r\n                            <p></p>\r\n                            <Select\r\n                                isClearable={true}\r\n                                value={selectedParent}\r\n                                onChange={this.handleParentClick}\r\n                                options={parentOptions}\r\n                                closeMenuOnSelect={true}\r\n                                isSearchable={true}\r\n                                placeholder=\"Select a parent...\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Notification message={this.state.message} closeNotification={this.closeNotification}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({members, relationship, parents, familyTree}) => {\r\n    return {members, relationship, parents, familyTree};\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {getMembers, addParent, getParents, getFamilyTree, addCouple}\r\n)(Relationship);","import React, {Component} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {connect} from \"react-redux\";\r\nimport {getMembers, getFamilyTree} from \"../../actions\";\r\nimport Select from 'react-select';\r\nimport _ from 'lodash';\r\nimport dTree from 'd3-dtree';\r\nimport './FamilyTree.css';\r\nimport * as FamilyTreeHelper from '../../utils/FamilyTreeHelper';\r\nimport $ from 'jquery';\r\n\r\nclass FamilyTree extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            members: [],\r\n            selectedMember: null\r\n        };\r\n        window._ = _;\r\n    }\r\n\r\n    // As soon as this component is mounted, it will fetch all the members from the server\r\n    componentDidMount() {\r\n        this.props.getMembers().then(() => {\r\n            this.setState({\r\n                members: this.props.members\r\n            });\r\n        });\r\n    }\r\n\r\n    handleClick = (selectedMember) => {\r\n        this.setState({selectedMember});\r\n        $('#graph').html('');\r\n        if (selectedMember) {\r\n            this.props.getFamilyTree(selectedMember.value).then(() => {\r\n                const {familyTree} = this.props,\r\n                    memberId = selectedMember.value;\r\n\r\n                let generateNodes = (memberId) => {\r\n                    let member = FamilyTreeHelper.getObject(familyTree, 'memberId', memberId);\r\n                    let spouses = (member.spouses || [])\r\n                        .map(spouse => spouse.parentId)\r\n                        .map((parentId) => {\r\n                            let parent = FamilyTreeHelper.getObjects(familyTree, 'parentId', parentId),\r\n                                parentObject = {};\r\n                            parent.forEach(parent => {\r\n                                parentObject.parentId = parent.parentId;\r\n                                if (parent.members) {\r\n                                    parentObject.members = parent.members;\r\n                                }\r\n                                if (parent.children) {\r\n                                    parentObject.children = parent.children;\r\n                                }\r\n                            });\r\n                        return parentObject;\r\n                    }).map(parent => ({spouse: parent.members.filter(spouse => spouse.memberId !== member.memberId)[0], children: parent.children}));\r\n\r\n                    return [{\r\n                        name: member.name,\r\n                        class: 'sex' + (member.sex || ''),\r\n                        marriages: spouses.map(relation => {\r\n                            return ({\r\n                                spouse: {\r\n                                    name: relation.spouse.name,\r\n                                    class: 'sex' + (relation.spouse.sex || ''),\r\n                                    extra: _.pick(relation.spouse, ['memberId'])\r\n                                },\r\n                                children: (relation.children || [])\r\n                                    .map(child => (generateNodes(child.memberId)[0]))\r\n                            })\r\n                        }),\r\n                        extra: _.pick(member, ['memberId'])\r\n                    }];\r\n                };\r\n\r\n\r\n                let generateFamilyTree = (memberId) => {\r\n                    const member = FamilyTreeHelper.getObject(familyTree, 'memberId', memberId);\r\n                    if (member.parent) {\r\n                        let parentIds = FamilyTreeHelper.getObjects(familyTree, 'parentId', _.get(member, 'parent.parentId'))\r\n                            .filter(couple => couple.members)\r\n                            .map(member => member.members)[0]\r\n                            .map(member => member.memberId);\r\n                        return generateNodes(parentIds[0]);\r\n                    }  else {\r\n                        return generateNodes(memberId);\r\n                    }\r\n                };\r\n\r\n                let that = this;\r\n\r\n                // Configuration required for generating family tree using D3 dtree.\r\n                const config = {\r\n                    target: '#graph',\r\n                    debug: false,\r\n                    height: 2000,\r\n                    width: 1800,\r\n                    callbacks: {\r\n                        nodeClick: function (name, extra) {\r\n                            if (_.get(extra, 'memberId')) {\r\n                                that.handleClick({value: extra.memberId, label: name});\r\n                            }\r\n                        },\r\n                        textRenderer: function (name, extra) {\r\n                            extra = extra || {};\r\n                            extra = FamilyTreeHelper.getObject(familyTree, 'memberId', extra.memberId);\r\n                            return `<p align=\"center\" class=\"nodeText\">\r\n                            ${name}<br/>\r\n                            ${[extra.birthYear, extra.deathYear].filter(year => year).join(' - ')}\r\n                            <br/>\r\n                            ${extra.birthPlace}\r\n                            </p>`;\r\n                        }\r\n                    },\r\n                    margin: {\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        left: 0\r\n                    },\r\n                    nodeWidth: 200,\r\n                    styles: {\r\n                        node: 'node',\r\n                        linage: 'linage',\r\n                        marriage: 'marriage',\r\n                        text: 'nodeText'\r\n                    }\r\n                };\r\n\r\n                const ancestorConfig = $.extend(true, {}, config);\r\n                ancestorConfig.styles.node = 'disabled';\r\n                ancestorConfig.height = 200;\r\n\r\n                let node = generateFamilyTree(memberId);\r\n                let displayedNodes = FamilyTreeHelper.getObjects(node, 'name', '').map(member => member.extra.memberId);\r\n                let ancestors = [{name: 'Possible Ancestors -->', class: 'ancestorHeading'}];\r\n\r\n                 [...new Set(FamilyTreeHelper.getObjects(familyTree, 'memberId', '')\r\n                    .filter(member => !member.parent)\r\n                    .map(member => member.memberId)\r\n                    .filter(memberId => {\r\n                         return !_.includes(displayedNodes, memberId)}))]\r\n                    .map(memberId => FamilyTreeHelper.getObject(familyTree, 'memberId', memberId))\r\n                    .forEach(member => {\r\n                        ancestors.push({\r\n                            name: member.name,\r\n                            class: 'sex' + (member.sex || '') + ' disabled',\r\n                            extra: _.pick(member, ['memberId'])\r\n                        })\r\n                    });\r\n\r\n                dTree.init(ancestors, ancestorConfig);\r\n                dTree.init(node, config);\r\n\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {members, selectedMember} = this.state;\r\n\r\n        let options = members.map(member => ({\r\n            value: member.memberId,\r\n            label: member.name\r\n        }));\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={12}>\r\n                        <div style={{padding: 50}}>\r\n                            <Select\r\n                                isClearable={true}\r\n                                isSearchable={true}\r\n                                value={selectedMember}\r\n                                onChange={this.handleClick}\r\n                                autoFocus={true}\r\n                                options={options}\r\n                                placeholder=\"Select a member to to show the family tree...\"\r\n                            />\r\n                        </div>\r\n                        <div id=\"graph\"></div>\r\n                    </Grid>\r\n                </Grid>\r\n            </ div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({members, familyTree}) => {\r\n    return {members, familyTree};\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {getMembers, getFamilyTree}\r\n)(FamilyTree);","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { error: null, errorInfo: null };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // Catch errors in any components below and re-render with error message\r\n        this.setState({\r\n            error: error,\r\n            errorInfo: errorInfo\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.errorInfo) {\r\n            // Error path\r\n            return (\r\n                <div>\r\n                    <h2>Something went wrong.</h2>\r\n                    <details style={{ whiteSpace: 'pre-wrap' }}>\r\n                        {this.state.error && this.state.error.toString()}\r\n                        <br />\r\n                        {this.state.errorInfo.componentStack}\r\n                    </details>\r\n                </div>\r\n            );\r\n        }\r\n        // Normally, just render children\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","// This component is the skeleton of the entire application.\n// On a high level, it is divided into Header, View, and Footer.\n\nimport React, {Component} from 'react';\nimport './App.css';\nimport Member from './containers/Member/Member';\nimport Header from './components/Header/Header';\nimport Relationship from './containers/Relationship/Relationship';\nimport FamilyTree from './containers/FamilyTree/FamilyTree';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport ErrorBoundary from './utils/ErrorBoundary'\nimport {connect} from \"react-redux\";\nimport {getUserContext} from \"./actions\";\n\nclass App extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            userContext: ''\n        }\n    }\n\n    componentDidMount() {\n        this.props.getUserContext().then(() => {\n            this.setState({\n                userContext: this.props.userContext\n            });\n        });\n    }\n\n    generateSwitch() {\n        const {userContext} = this.state;\n        if (userContext === 'admin') {\n            return (\n                <Switch>\n                    <Route path='/familyTree' component={FamilyTree}/>\n                    <Route path='/member' component={Member}/>\n                    <Route path='/relationship' component={Relationship}/>\n                    <Route exact path='/' component={FamilyTree}/>\n                </Switch>\n            )\n        } else {\n            return (\n                <Switch>\n                    <Route exact path='/' component={FamilyTree}/>\n                    <Route path='/familyTree' component={FamilyTree}/>\n                </Switch>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <ErrorBoundary>\n                <div>\n                    <BrowserRouter>\n                        {/* Header component for displaying navigational links and brand information */}\n                        <Header userContext={this.state.userContext}/>\n\n                        {/* Route information */}\n                        {this.generateSwitch()}\n                    </BrowserRouter>\n                </div>\n            </ErrorBoundary>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({userContext}) => {\n    return {userContext};\n};\n\nexport default connect(mapStateToProps,\n    {getUserContext})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n    GET_MEMBER,\r\n    GET_MEMBERS,\r\n} from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GET_MEMBER:\r\n            return action.payload.data;\r\n        case GET_MEMBERS:\r\n            return action.payload.data;\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport MemberReducer from './MemberReducer';\r\nimport ParentReducer from './ParentReducer';\r\nimport FamilyTreeReducer from './FamilyTreeReducer';\r\nimport UserContextReducer from './UserContextReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    member: MemberReducer,\r\n    familyTree: FamilyTreeReducer,\r\n    members: MemberReducer,\r\n    parents: ParentReducer,\r\n    userContext: UserContextReducer\r\n});\r\n\r\nexport default rootReducer;","import {\r\n    GET_FAMILY_TREE,\r\n} from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GET_FAMILY_TREE:\r\n            return action.payload.data;\r\n        default:\r\n            return state;\r\n    }\r\n};","import {\r\n    GET_COUPLES\r\n} from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GET_COUPLES:\r\n            return action.payload.data;\r\n        default:\r\n            return state;\r\n    }\r\n};","import {\r\n    GET_USER_CONTEXT,\r\n} from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GET_USER_CONTEXT:\r\n            return action.payload.data;\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from './reducers';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport reduxThunk from 'redux-thunk'\n\nconst createStoreWithMiddleware = applyMiddleware(reduxThunk)(createStore);\nconst store = createStoreWithMiddleware(reducers);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}